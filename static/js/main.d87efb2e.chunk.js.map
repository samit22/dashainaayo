{"version":3,"sources":["utils/index.js","music/dashain_dhun.mp3","Components/Countdown/index.js","Components/Footer/footer.js","Components/Kite/index.js","Components/Dashain/importantDates.js","Components/Dashain/index.js","music/tihar_dhun.mp3","Components/Tihar/tiharDates.js","Components/Tihar/Lights.js","Components/Tihar/index.js","Components/Router/route.js","App.js","reportWebVitals.js","index.js"],"names":["convertNepaliDigit","num","numbers","toString","split","map","n","Number","join","DashainDates","start_date","dates","eng_label","nep_label","day","findReadableTime","date","moment","fromNow","addHours","hours","add","format","TiharDates","Countdown","ctDate","calculateTimeLeft","difference","Date","timeLeft","days","Math","floor","minutes","seconds","useState","setTimeLeft","useEffect","timer","setTimeout","clearTimeout","Footer","AppBar","position","sx","top","bottom","background","Toolbar","Box","fontSize","flexGrow","IconButton","color","href","target","KiteFlying","className","columns","field","headerName","flex","minWidth","width","DashainDetails","props","startDate","rows","d","i","id","label","in","height","backgroundColor","fontWeight","DataGrid","disableColumnSelector","hideFooter","hideFooterSelectedRowCount","getRowClassName","params","rd","headerHeight","NepaliCountdown","styled","Typography","padding","theme","spacing","textAlign","datFS","md","sm","xs","DashainCountdown","fulpati","year","getFullYear","loading","setLoading","msgLoading","setMsgLoading","url","Audio","audio","autoplay","volume","loop","playing","setPlaying","toggle","playedPromise","play","catch","e","console","log","name","then","pause","addEventListener","removeEventListener","useAudio","dhun","timerComponents","Object","keys","forEach","interval","push","pt","pr","pl","Grid","container","item","component","text","Kite","length","display","justifyContent","mt","Tooltip","TransitionComponent","Zoom","open","arrow","enterDelay","title","placement","size","onClick","TiharDays","Light","TiharCountdown","kaagTihar","overflow","fontStretch","fontFamily","textShadow","Router","path","exact","element","Tihar","Dashain","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"waAEaA,EAAqB,SAAAC,GAChC,IAAMC,EAAU,CACd,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,UAYL,OAVqBD,EAClBE,WACAC,MAAM,IACNC,KAAI,SAAAC,GACH,MAAU,MAANA,GAAmB,MAANA,EACRA,EAGFJ,EAAQK,OAAOD,GACvB,IACiBE,KAAK,GAC1B,EAEYC,EAAe,CAC1BC,WAAY,sBACZC,MAAO,CACL,CAAEC,UAAW,gBAAiBC,UAAW,yDAAaC,IAAK,GAC3D,CAAEF,UAAW,UAAWC,UAAW,6CAAWC,IAAK,GACnD,CAAEF,UAAW,cAAeC,UAAW,yDAAaC,IAAK,GACzD,CAAEF,UAAW,cAAeC,UAAW,6CAAWC,IAAK,GACvD,CAAEF,UAAW,iBAAkBC,UAAW,0DAAcC,IAAK,IAC7D,CAAEF,UAAW,qBAAsBC,UAAW,8FAAoBC,IAAK,IACvE,CAAEF,UAAW,oBAAqBC,UAAW,oGAAqBC,IAAK,MAI9DC,EAAmB,SAAAC,GAE9B,OAAOC,IAAOD,GAAME,SACrB,EAEYC,EAAW,SAACH,EAAMI,GAE7B,OADcH,IAAOD,GAAMK,IAAID,EAAO,SAASE,OAAO,sBAEvD,EAEYC,EAAa,CACxBb,WAAY,sBACZC,MAAO,CACL,CAAEC,UAAW,aAAcC,UAAW,oDAAaC,IAAK,GACxD,CAAEF,UAAW,cAAeC,UAAW,gEAAeC,IAAK,GAC3D,CAAEF,UAAW,cAAeC,UAAW,sEAAgBC,IAAK,GAC5D,CAAEF,UAAW,YAAaC,UAAW,8CAAYC,IAAK,GACtD,CAAEF,UAAW,gBAAiBC,UAAW,sEAAgBC,IAAK,GAC9D,CAAEF,UAAW,WAAYC,UAAW,6CAAWC,IAAK,GACpD,CAAEF,UAAW,YAAaC,UAAW,6CAAWC,IAAK,KC5D1C,G,OAAA,IAA0B,0CCE5BU,EAAY,SAAAC,GACvB,IAAMC,EAAoB,WACxB,IACMC,GADM,IAAIC,KAAKH,IACQ,IAAIG,KAC7BC,EAAW,CAAC,EAWhB,OATIF,EAAa,IACfE,EAAW,CACTC,KAAMC,KAAKC,MAAML,EAAU,OAC3BP,MAAOW,KAAKC,MAAOL,EAAU,KAAuB,IACpDM,QAASF,KAAKC,MAAOL,EAAa,IAAO,GAAM,IAC/CO,QAASH,KAAKC,MAAOL,EAAa,IAAQ,MAIvCE,CACR,EAED,EAAgCM,mBAAST,KAAzC,mBAAOG,EAAP,KAAiBO,EAAjB,KAQA,OANAC,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,EAAYV,IACb,GAAE,KACH,OAAO,kBAAMc,aAAaF,EAAnB,CACR,IACMT,CACR,E,sFCtBc,SAASY,IACtB,OACE,cAACC,EAAA,EAAD,CACEC,SAAS,QACTC,GAAI,CAAEC,IAAK,OAAQC,OAAQ,EAAGC,WAAY,WAF5C,SAIE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEL,GAAI,CACFM,SAAU,QAFd,UAKG,qCACD,4DANF,OAOE,oDAEF,cAACD,EAAA,EAAD,CAAKL,GAAI,CAAEO,SAAU,KACrB,eAACC,EAAA,EAAD,CACEC,MAAM,YACN,aAAW,cACXC,KAAK,mDACLC,OAAO,SAJT,UAME,cAAC,IAAD,IANF,oBAWP,C,WCtBcC,EATI,WACjB,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,SACf,qBAAKA,UAAU,aAGpB,E,SCLKC,EAAU,CACd,CACEC,MAAO,QACPC,WAAY,QACZC,KAAM,EACNC,SAAU,KAGZ,CACEH,MAAO,KACPC,WAAY,KACZG,MAAO,MAkDIC,EA9CQ,SAAAC,GACrB,IAAMC,EAAYzD,EAAaC,WACzByD,EAAO1D,EAAaE,MAAMN,KAAI,SAAC+D,EAAGC,GACtC,IAAMvD,EAAMK,EAAS+C,EAAyB,IAAbE,EAAEtD,IAAM,IACzC,MAAO,CACLwD,GAAID,EAAI,EACRvD,IAAKsD,EAAEtD,IACPD,UAAWuD,EAAEvD,UACbD,UAAWwD,EAAExD,UACb2D,MAAM,GAAD,OAAKH,EAAEvD,UAAP,YAAoBuD,EAAExD,UAAtB,KACL4D,GAAG,GAAD,OAAKzD,EAAiBD,IAE3B,IACD,OACE,cAACmC,EAAA,EAAD,CACEL,GAAI,CACF6B,OAAQ,QACRV,MAAO,OACP,0BAA2B,CACzBW,gBAAiB,YACjBrB,MAAO,UACPsB,WAAY,OAEd,2BAA4B,CAC1BD,gBAAiB,4BACjBrB,MAAO,UACPsB,WAAY,QAZlB,SAgBE,cAACC,EAAA,EAAD,CACET,KAAMA,EACNT,QAASA,EACTmB,uBAAqB,EACrBC,YAAU,EACVC,4BAA0B,EAC1BC,gBAAiB,SAAAC,GACf,IAAMC,EAAKD,EAAOX,GAAK,IAAM,EAAI,OAAS,MAC1C,MAAM,oBAAN,OAA2BY,EAC5B,EACDC,aAAc,KAIrB,ECtCKC,EAAkBC,YAAOC,IAAPD,EAAmB,kBAAgB,CACzDE,QADyC,EAAGC,MAC7BC,QAAQ,GACvBC,UAAW,SAF8B,IAKrCC,EAAQ,CACZC,GAAI,OACJC,GAAI,OACJC,GAAI,QAwOSC,EArOU,WACvB,IAAMC,EAAU7E,EAASV,EAAaC,WAAY,KAC9CmB,EAAWL,EAAUwE,GACrBC,GAAO,IAAIrE,MAAOsE,cAEtB,EAA8B/D,oBAAS,GAAvC,mBAAOgE,EAAP,KAAgBC,EAAhB,KACA,EAAoCjE,oBAAS,GAA7C,mBAAOkE,EAAP,KAAmBC,EAAnB,KA4CA,EA1CiB,SAAAC,GACf,MAAgBpE,mBAAS,IAAIqE,MAAMD,IAA5BE,EAAP,oBACAA,EAAMC,UAAW,EACjBD,EAAME,OAAS,GACfF,EAAMG,MAAO,EACb,MAA8BzE,oBAAS,GAAvC,mBAAO0E,EAAP,KAAgBC,EAAhB,KAEA,SAASC,IACPD,GAAYD,EACb,CA8BD,OA5BAxE,qBAAU,WACR,GAAIwE,EAAS,CACX,IAAIG,EAAgBP,EAAMQ,OACtBD,GACFA,EACGE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GAEC,oBAAXA,EAAEG,MACS,sBAAXH,EAAEG,MAEFP,GAEH,IACAQ,MAAK,WAAQ,GAEnB,MACCd,EAAMe,OAET,GAAE,CAACX,IAEJxE,qBAAU,WAER,OADAoE,EAAMgB,iBAAiB,SAAS,kBAAMX,GAAW,EAAjB,IACzB,WACLL,EAAMiB,oBAAoB,SAAS,kBAAMZ,GAAW,EAAjB,GACpC,CACF,GAAE,IAEI,CAACD,EAASE,EAClB,CAEyBY,CAASC,GAAnC,mBAAOf,EAAP,KAAgBE,EAAhB,KAEA1E,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvB6D,GAAW,EACZ,GAAE,KACH,OAAO,kBAAM5D,aAAaF,EAAnB,CACR,GAAE,IAEHD,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvB+D,GAAc,GACdS,GACD,GAAE,KAEH,OAAO,kBAAMvE,aAAaF,EAAnB,CACR,GAAE,IAEH,IAAMuF,EAAkB,GAUxB,OATAC,OAAOC,KAAKlG,GAAUmG,SAAQ,SAAAC,GACvBpG,EAASoG,IAGdJ,EAAgBK,KACd,yCAAyBrG,EAASoG,GAAlC,YAA+CA,EAA/C,MAAWA,GAEd,IAGC,eAAChF,EAAA,EAAD,CACEL,GAAI,CAAEO,SAAU,EAAGgF,GAAI,KAAMC,GAAI,KAAMC,GAAI,MAC3C5E,UAAU,WAFZ,UAIE,eAAC6E,EAAA,EAAD,CAAMC,WAAS,EAAC9C,QAAS,EAAzB,UACE,cAAC6C,EAAA,EAAD,CAAME,MAAI,EAAC5C,GAAI,EAAGE,GAAI,KACtB,eAACwC,EAAA,EAAD,CACEE,MAAI,EACJ5C,GAAI,EACJE,GAAI,GACJlD,GAAI,CACF8C,UAAW,UALf,UAQE,cAACJ,EAAA,EAAD,CACEmD,UAAW,MACX7F,GAAI,CACF8C,UAAW,SACXxC,SAAU,OACVyB,WAAY,QALhB,SAQE,cAAC,IAAD,CAAmB+D,KAAM,CAAC,uEAAD,kBAA6BzC,QAEvDE,EACC,GAEA,qCACE,cAACwC,EAAD,IACCd,EAAgBe,OACf,qCACE,cAACtD,EAAA,EAAD,CACE1C,GAAI,CACFM,SAAU,QAFd,SAKG2E,IAEH,eAAC5E,EAAA,EAAD,CACE4F,QAAS,OACTC,eAAe,SACflG,GAAI,CACFmG,GAAI,MAJR,UAOE,eAAC3D,EAAD,CAAiBlC,SAAUyC,EAA3B,UACG3F,EAAmB6B,EAASC,MAD/B,yBAGA,eAACsD,EAAD,CAAiBlC,SAAUyC,EAA3B,UACG3F,EAAmB6B,EAAST,OAD/B,qCAGA,eAACgE,EAAD,CAAiBlC,SAAUyC,EAA3B,UACG3F,EAAmB6B,EAASI,SAD/B,qCAGA,eAACmD,EAAD,CAAiBlC,SAAUyC,EAA3B,UACG3F,EAAmB6B,EAASK,SAD/B,uDAMJ,wDAILmE,EACC,GAEA,sBAAK5C,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACuF,EAAA,EAAD,CACEC,oBAAqBC,IACrBC,MAAOtC,EACPuC,OAAK,EACLC,WAAY,IACZC,MACE,cAAChE,EAAA,EAAD,CACEpC,SAAU,GACVN,GAAI,CAAE8B,gBAAiB,aAFzB,+BAOF6E,UAAU,aACV3G,GAAI,CACFM,SAAU,QAfd,SAkBE,cAACE,EAAA,EAAD,CACE,aAAW,aACXoG,KAAK,QACLnG,MAAM,UACNT,GAAI,CACF6B,OAAQ,MACRV,MAAO,MACPb,SAAU,QAEZuG,QAAS,SAAAtC,GACPJ,GACD,EAXH,SAaGF,EACC,cAAC,IAAD,CACExD,MAAM,UACNT,GAAI,CAAEM,SAAU,IAAKG,MAAO,aAG9B,cAAC,IAAD,CACEA,MAAM,QACNT,GAAI,CAAEM,SAAU,IAAKG,MAAO,kBAMtC,cAAC,IAAD,CACEqF,KAAM,CACJ,uSADI,sDAQd,cAACJ,EAAA,EAAD,CAAME,MAAI,EAAC5C,GAAI,EAAGE,GAAI,GAAtB,SACGK,EACC,6BAEA,eAAClD,EAAA,EAAD,CACEL,GAAI,CACFuF,GAAI,MAFR,UAKE,cAAC7C,EAAA,EAAD,CACE1C,GAAI,CACFM,SAAU,OACVwC,UAAW,UAHf,6BAQA,cAAC,EAAD,YAKR,cAACjD,EAAD,MAGL,ECzQc,G,OAAA,IAA0B,wCCMnCiB,EAAU,CACd,CACEC,MAAO,QACPC,WAAY,QACZC,KAAM,EACNC,SAAU,KAGZ,CACEH,MAAO,KACPC,WAAY,KACZG,MAAO,MAkDI2F,EA9CG,SAAAzF,GAChB,IAAMC,EAAY3C,EAAWb,WACvByD,EAAO5C,EAAWZ,MAAMN,KAAI,SAAC+D,EAAGC,GACpC,IAAMvD,EAAMK,EAAS+C,EAAyB,IAAbE,EAAEtD,IAAM,IACzC,MAAO,CACLwD,GAAID,EAAI,EACRvD,IAAKsD,EAAEtD,IACPD,UAAWuD,EAAEvD,UACbD,UAAWwD,EAAExD,UACb2D,MAAM,GAAD,OAAKH,EAAEvD,UAAP,YAAoBuD,EAAExD,UAAtB,KACL4D,GAAG,GAAD,OAAKzD,EAAiBD,IAE3B,IACD,OACE,cAACmC,EAAA,EAAD,CACEL,GAAI,CACF6B,OAAQ,QACRV,MAAO,OACP,0BAA2B,CACzBW,gBAAiB,YACjBrB,MAAO,UACPsB,WAAY,OAEd,2BAA4B,CAC1BD,gBAAiB,4BACjBrB,MAAO,UACPsB,WAAY,QAZlB,SAgBE,cAACC,EAAA,EAAD,CACET,KAAMA,EACNT,QAASA,EACTmB,uBAAqB,EACrBC,YAAU,EACVC,4BAA0B,EAC1BC,gBAAiB,SAAAC,GACf,IAAMC,EAAKD,EAAOX,GAAK,IAAM,EAAI,OAAS,MAC1C,MAAM,oBAAN,OAA2BY,EAC5B,EACDC,aAAc,KAIrB,ECrBcwE,G,cAxCD,WACZ,OACE,qBAAIlG,UAAU,OAAd,UACE,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGL,GCbK2B,EAAkBC,YAAOC,IAAPD,EAAmB,kBAAgB,CACzDE,QADyC,EAAGC,MAC7BC,QAAQ,GACvBC,UAAW,SAF8B,IAKrCC,EAAQ,CACZC,GAAI,OACJC,GAAI,OACJC,GAAI,QAsPS8D,EAnPQ,WACrB,IAAMC,EAAY1I,EAASI,EAAWb,YAClCmB,EAAWL,EAAUqI,GACrB5D,GAAO,IAAIrE,MAAOsE,cAEtB,EAA8B/D,oBAAS,GAAvC,mBAAOgE,EAAP,KAAgBC,EAAhB,KACA,EAAoCjE,oBAAS,GAA7C,mBAAOkE,EAAP,KAAmBC,EAAnB,KA4CA,EA1CiB,SAAAC,GACf,MAAgBpE,mBAAS,IAAIqE,MAAMD,IAA5BE,EAAP,oBACAA,EAAMC,UAAW,EACjBD,EAAME,OAAS,GACfF,EAAMG,MAAO,EACb,MAA8BzE,oBAAS,GAAvC,mBAAO0E,EAAP,KAAgBC,EAAhB,KAEA,SAASC,IACPD,GAAYD,EACb,CA8BD,OA5BAxE,qBAAU,WACR,GAAIwE,EAAS,CACX,IAAIG,EAAgBP,EAAMQ,OACtBD,GACFA,EACGE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GAEC,oBAAXA,EAAEG,MACS,sBAAXH,EAAEG,MAEFP,GAEH,IACAQ,MAAK,WAAQ,GAEnB,MACCd,EAAMe,OAET,GAAE,CAACX,IAEJxE,qBAAU,WAER,OADAoE,EAAMgB,iBAAiB,SAAS,kBAAMX,GAAW,EAAjB,IACzB,WACLL,EAAMiB,oBAAoB,SAAS,kBAAMZ,GAAW,EAAjB,GACpC,CACF,GAAE,IAEI,CAACD,EAASE,EAClB,CAEyBY,CAASC,GAAnC,mBAAOf,EAAP,KAAgBE,EAAhB,KAEA1E,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvB6D,GAAW,EACZ,GAAE,KACH,OAAO,kBAAM5D,aAAaF,EAAnB,CACR,GAAE,IAEHD,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvB+D,GAAc,GACdS,GACD,GAAE,KAEH,OAAO,kBAAMvE,aAAaF,EAAnB,CACR,GAAE,IAEH,IAAMuF,EAAkB,GAUxB,OATAC,OAAOC,KAAKlG,GAAUmG,SAAQ,SAAAC,GACvBpG,EAASoG,IAGdJ,EAAgBK,KACd,yCAAyBrG,EAASoG,GAAlC,YAA+CA,EAA/C,MAAWA,GAEd,IAGC,qCACE,cAAChF,EAAA,EAAD,CACEL,GAAI,CACFuF,GAAI,KACJzC,UAAW,SACXoE,SAAU,UAJd,SAOE,cAAC,EAAD,MAEF,eAAC7G,EAAA,EAAD,CACEL,GAAI,CAAEO,SAAU,EAAGgF,GAAI,KAAMC,GAAI,KAAMC,GAAI,MAC3C5E,UAAU,iBAFZ,UAIE,eAAC6E,EAAA,EAAD,CAAMC,WAAS,EAAC9C,QAAS,EAAzB,UACE,cAAC6C,EAAA,EAAD,CAAME,MAAI,EAAC5C,GAAI,EAAGE,GAAI,KACtB,eAACwC,EAAA,EAAD,CACEE,MAAI,EACJ5C,GAAI,EACJE,GAAI,GACJlD,GAAI,CACF8C,UAAW,UALf,UAQE,cAACJ,EAAA,EAAD,CACEmD,UAAW,MACX7F,GAAI,CACF8C,UAAW,SACXxC,SAAU,OACVyB,WAAY,OACZoF,YAAa,OACbC,WAAY,yBACZC,WAAY,kCARhB,SAWE,cAAC,IAAD,CAAmBvB,KAAM,CAAC,0DAAD,gBAAwBzC,QAElDE,EACC,GAEA,mCAEG0B,EAAgBe,OACf,qCACE,cAACtD,EAAA,EAAD,CACE1C,GAAI,CACFM,SAAU,QAFd,SAKG2E,IAEH,eAAC5E,EAAA,EAAD,CACE4F,QAAS,OACTC,eAAe,SACflG,GAAI,CACFmG,GAAI,MAJR,UAOE,eAAC,EAAD,CAAiB7F,SAAUyC,EAA3B,UACG3F,EAAmB6B,EAASC,MAD/B,yBAGA,eAAC,EAAD,CAAiBoB,SAAUyC,EAA3B,UACG3F,EAAmB6B,EAAST,OAD/B,qCAGA,eAAC,EAAD,CAAiB8B,SAAUyC,EAA3B,UACG3F,EAAmB6B,EAASI,SAD/B,qCAGA,eAAC,EAAD,CAAiBiB,SAAUyC,EAA3B,UACG3F,EAAmB6B,EAASK,SAD/B,uDAMJ,qDAILmE,EACC,GAEA,sBAAK5C,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACuF,EAAA,EAAD,CACEC,oBAAqBC,IACrBC,MAAOtC,EACPuC,OAAK,EACLC,WAAY,IACZC,MACE,cAAChE,EAAA,EAAD,CACEpC,SAAU,GACVN,GAAI,CAAE8B,gBAAiB,aAFzB,+BAOF6E,UAAU,aACV3G,GAAI,CACFM,SAAU,QAfd,SAkBE,cAACE,EAAA,EAAD,CACE,aAAW,aACXoG,KAAK,QACLnG,MAAM,UACNT,GAAI,CACF6B,OAAQ,MACRV,MAAO,MACPb,SAAU,QAEZuG,QAAS,SAAAtC,GACPJ,GACD,EAXH,SAaGF,EACC,cAAC,IAAD,CACExD,MAAM,UACNT,GAAI,CAAEM,SAAU,IAAKG,MAAO,aAG9B,cAAC,IAAD,CACEA,MAAM,QACNT,GAAI,CAAEM,SAAU,IAAKG,MAAO,kBAMtC,cAAC,IAAD,CACEqF,KAAM,CACJ,sNADI,8BAQd,cAACJ,EAAA,EAAD,CAAME,MAAI,EAAC5C,GAAI,EAAGE,GAAI,GAAtB,SACGK,EACC,6BAEA,eAAClD,EAAA,EAAD,CACEL,GAAI,CACFuF,GAAI,MAFR,UAKE,cAAC7C,EAAA,EAAD,CACE1C,GAAI,CACFM,SAAU,OACVwC,UAAW,UAHf,6BAQA,cAAC,EAAD,YAKR,cAACjD,EAAD,SAIP,ECpRc,SAASyH,IACtB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAK,IACLC,OAAK,EACLC,QACE,cAACC,EAAD,MAIH,cAAC,IAAD,CACCH,KAAK,WACLC,OAAK,EACLC,QACE,cAACE,EAAD,MAIJ,cAAC,IAAD,CACEJ,KAAK,SACLC,OAAK,EACLC,QACE,cAACC,EAAD,QAMT,C,aCnBcE,MAVf,WACE,OACE,cAAC,IAAD,UACA,qBAAK/G,UAAU,MAAf,SACG,cAACyG,EAAD,OAIN,ECDcO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpD,MAAK,YAAkD,IAA/CqD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,ECJDO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,I","file":"static/js/main.d87efb2e.chunk.js","sourcesContent":["import moment from 'moment-timezone';\n\nexport const convertNepaliDigit = num => {\n  const numbers = {\n    0: '०',\n    1: '१',\n    2: '२',\n    3: '३',\n    4: '४',\n    5: '५',\n    6: '६',\n    7: '७',\n    8: '८',\n    9: '९',\n  };\n  const convertArray = num\n    .toString()\n    .split('')\n    .map(n => {\n      if (n === '.' || n === ',') {\n        return n;\n      }\n\n      return numbers[Number(n)];\n    });\n  return convertArray.join('');\n};\n\nexport const DashainDates = {\n  start_date: '2022-09-26 00:00:00',\n  dates: [\n    { eng_label: 'Ghatasthapana', nep_label: 'घटस्थापना', day: 1 },\n    { eng_label: 'Fulpati', nep_label: 'फूलपाती', day: 7 },\n    { eng_label: 'Maha astami', nep_label: 'महाअष्टमी', day: 8 },\n    { eng_label: 'Maha Nawami', nep_label: 'महानवमी', day: 9 },\n    { eng_label: 'Bijaya Dashami', nep_label: 'विजया दशमी', day: 10 },\n    { eng_label: 'Papakunsa Ekadashi', nep_label: 'पापांकुशा एकादशी', day: 11 },\n    { eng_label: 'Kojagrat Poornima', nep_label: 'कोजाग्रत पूर्णिमा', day: 14 },\n  ],\n};\n\nexport const findReadableTime = date => {\n  // console.log(date);\n  return moment(date).fromNow();\n};\n\nexport const addHours = (date, hours) => {\n  const added = moment(date).add(hours, 'hours').format('YYYY-MM-DD HH:mm:ss');\n  return added;\n};\n\nexport const TiharDates = {\n  start_date: '2022-10-23 00:00:00',\n  dates: [\n    { eng_label: 'Kaag Tihar', nep_label: 'काग तिहार', day: 1 },\n    { eng_label: 'Kukur Tihar', nep_label: 'कुकुर तिहार', day: 2 },\n    { eng_label: 'Laxmi Pooja', nep_label: 'लक्ष्मी पुजा', day: 2 },\n    { eng_label: 'Gaai Puja', nep_label: 'गाई पूजा', day: 3 },\n    { eng_label: 'Gobardan Puja', nep_label: 'गोवर्धन पूजा', day: 4 },\n    { eng_label: 'Mha Puja', nep_label: 'म्हपूजा', day: 4 },\n    { eng_label: 'Bhai Tika', nep_label: 'भाइटीका', day: 5 },\n  ],\n};","export default __webpack_public_path__ + \"static/media/dashain_dhun.d85e3577.mp3\";","import { useEffect, useState } from 'react';\n\nexport const Countdown = ctDate => {\n  const calculateTimeLeft = () => {\n    let until = new Date(ctDate);\n    const difference = +until - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n  return timeLeft;\n};\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\n\nexport default function Footer() {\n  return (\n    <AppBar\n      position=\"fixed\"\n      sx={{ top: 'auto', bottom: 0, background: '#e59c96' }}\n    >\n      <Toolbar>\n        <Box\n          sx={{\n            fontSize: '25px',\n          }}\n        >\n          {'Wishing you and your family a very'}\n          <strong> Happy Bijaya Dashami </strong> and\n          <strong> Deepawali.</strong>\n        </Box>\n        <Box sx={{ flexGrow: 1 }} />\n        <IconButton\n          color=\"secondary\"\n          aria-label=\"open drawer\"\n          href=\"https://twitter.com/samit_gh?ref_src=twsrc%5Etfw\"\n          target=\"_blank\"\n        >\n          <TwitterIcon /> @samit_gh\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\n\nimport './kite.css';\n\nconst KiteFlying = () => {\n  return (\n    <div className=\"kite\">\n      <div className=\"tail\"></div>\n      <div className=\"string\"></div>\n    </div>\n  );\n};\n\nexport default KiteFlying;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\n\nimport { DashainDates, findReadableTime, addHours } from '../../utils';\n\nconst columns = [\n  {\n    field: 'label',\n    headerName: 'Day()',\n    flex: 1,\n    minWidth: 170,\n  },\n\n  {\n    field: 'in',\n    headerName: 'In',\n    width: 120,\n  },\n];\n\nconst DashainDetails = props => {\n  const startDate = DashainDates.start_date;\n  const rows = DashainDates.dates.map((d, i) => {\n    const day = addHours(startDate, (d.day - 1) * 24);\n    return {\n      id: i + 1,\n      day: d.day,\n      nep_label: d.nep_label,\n      eng_label: d.eng_label,\n      label: `${d.nep_label}(${d.eng_label})`,\n      in: `${findReadableTime(day)}`,\n    };\n  });\n  return (\n    <Box\n      sx={{\n        height: '380px',\n        width: '100%',\n        '& .super-app-theme--odd': {\n          backgroundColor: '#ea80808c',\n          color: '#1a3e72',\n          fontWeight: '600',\n        },\n        '& .super-app-theme--even': {\n          backgroundColor: 'rgba(157, 255, 118, 0.49)',\n          color: '#1a3e72',\n          fontWeight: '600',\n        },\n      }}\n    >\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        disableColumnSelector\n        hideFooter\n        hideFooterSelectedRowCount\n        getRowClassName={params => {\n          const rd = params.id % 2 === 0 ? 'even' : 'odd';\n          return `super-app-theme--${rd}`;\n        }}\n        headerHeight={0}\n      />\n    </Box>\n  );\n};\n\nexport default DashainDetails;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport ReactTypingEffect from 'react-typing-effect';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Tooltip from '@mui/material/Tooltip';\nimport Zoom from '@mui/material/Zoom';\n\nimport { convertNepaliDigit } from '../../utils';\nimport './style.css';\n\nimport dhun from '../../music/dashain_dhun.mp3';\n\nimport { Countdown } from '../Countdown';\n\nimport IconButton from '@mui/material/IconButton';\nimport PlayCircleOutlineRoundedIcon from '@mui/icons-material/PlayCircleOutlineRounded';\nimport PauseCircleOutlineRoundedIcon from '@mui/icons-material/PauseCircleOutlineRounded';\n\nimport Footer from '../Footer/footer';\nimport KiteFlying from '../Kite';\nimport DashainDetails from './importantDates';\n\nimport { DashainDates, addHours } from '../../utils';\n\nconst NepaliCountdown = styled(Typography)(({ theme }) => ({\n  padding: theme.spacing(1),\n  textAlign: 'center',\n}));\n\nconst datFS = {\n  md: '55px',\n  sm: '30px',\n  xs: '25px',\n};\n\nconst DashainCountdown = () => {\n  const fulpati = addHours(DashainDates.start_date, 6 * 24);\n  let timeLeft = Countdown(fulpati);\n  let year = new Date().getFullYear();\n\n  const [loading, setLoading] = useState(true);\n  const [msgLoading, setMsgLoading] = useState(true);\n\n  const useAudio = url => {\n    const [audio] = useState(new Audio(url));\n    audio.autoplay = true;\n    audio.volume = 0.3;\n    audio.loop = true;\n    const [playing, setPlaying] = useState(false);\n\n    function toggle() {\n      setPlaying(!playing);\n    }\n\n    useEffect(() => {\n      if (playing) {\n        var playedPromise = audio.play();\n        if (playedPromise) {\n          playedPromise\n            .catch(e => {\n              console.log(e);\n              if (\n                e.name === 'NotAllowedError' ||\n                e.name === 'NotSupportedError'\n              ) {\n                toggle();\n              }\n            })\n            .then(() => {});\n        }\n      } else {\n        audio.pause();\n      }\n    }, [playing]);\n\n    useEffect(() => {\n      audio.addEventListener('ended', () => setPlaying(false));\n      return () => {\n        audio.removeEventListener('ended', () => setPlaying(false));\n      };\n    }, []);\n\n    return [playing, toggle];\n  };\n\n  const [playing, toggle] = useAudio(dhun);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 7000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setMsgLoading(false);\n      toggle();\n    }, 8000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const timerComponents = [];\n  Object.keys(timeLeft).forEach(interval => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n    timerComponents.push(\n      <span key={interval}>{`${timeLeft[interval]} ${interval} `}</span>,\n    );\n  });\n\n  return (\n    <Box\n      sx={{ flexGrow: 1, pt: '5%', pr: '2%', pl: '2%' }}\n      className=\"bg-image\"\n    >\n      <Grid container spacing={2}>\n        <Grid item md={1} xs={12}></Grid>\n        <Grid\n          item\n          md={8}\n          xs={12}\n          sx={{\n            textAlign: 'center',\n          }}\n        >\n          <Typography\n            component={'div'}\n            sx={{\n              textAlign: 'center',\n              fontSize: '55px',\n              fontWeight: 'bold',\n            }}\n          >\n            <ReactTypingEffect text={['बडा दशैँ २०७९', `Dashain ${year}`]} />\n          </Typography>\n          {loading ? (\n            ''\n          ) : (\n            <>\n              <KiteFlying />\n              {timerComponents.length ? (\n                <>\n                  <Typography\n                    sx={{\n                      fontSize: '25px',\n                    }}\n                  >\n                    {timerComponents}\n                  </Typography>\n                  <Box\n                    display={'flex'}\n                    justifyContent=\"center\"\n                    sx={{\n                      mt: '2%',\n                    }}\n                  >\n                    <NepaliCountdown fontSize={datFS}>\n                      {convertNepaliDigit(timeLeft.days)} दिन\n                    </NepaliCountdown>\n                    <NepaliCountdown fontSize={datFS}>\n                      {convertNepaliDigit(timeLeft.hours)} घण्टा\n                    </NepaliCountdown>\n                    <NepaliCountdown fontSize={datFS}>\n                      {convertNepaliDigit(timeLeft.minutes)} मिनेट\n                    </NepaliCountdown>\n                    <NepaliCountdown fontSize={datFS}>\n                      {convertNepaliDigit(timeLeft.seconds)} सेकेन्ड\n                    </NepaliCountdown>\n                  </Box>\n                </>\n              ) : (\n                <span>Dashain is here!!</span>\n              )}\n            </>\n          )}\n          {msgLoading ? (\n            ''\n          ) : (\n            <div className=\"greeting-msg\">\n              <div className=\"play-pause\">\n                <Tooltip\n                  TransitionComponent={Zoom}\n                  open={!playing}\n                  arrow\n                  enterDelay={3000}\n                  title={\n                    <Typography\n                      fontSize={30}\n                      sx={{ backgroundColor: 'secondary' }}\n                    >\n                      Click me to Play!\n                    </Typography>\n                  }\n                  placement=\"bottom-end\"\n                  sx={{\n                    fontSize: '20px',\n                  }}\n                >\n                  <IconButton\n                    aria-label=\"controller\"\n                    size=\"large\"\n                    color=\"success\"\n                    sx={{\n                      height: '2em',\n                      width: '2em',\n                      fontSize: '40px',\n                    }}\n                    onClick={e => {\n                      toggle();\n                    }}\n                  >\n                    {playing ? (\n                      <PauseCircleOutlineRoundedIcon\n                        color=\"success\"\n                        sx={{ fontSize: 100, color: 'succces' }}\n                      />\n                    ) : (\n                      <PlayCircleOutlineRoundedIcon\n                        color=\"error\"\n                        sx={{ fontSize: 100, color: 'danger' }}\n                      />\n                    )}\n                  </IconButton>\n                </Tooltip>\n              </div>\n              <ReactTypingEffect\n                text={[\n                  'विजया दशमी एवम दिपावली २०७९को हार्दिक मंङगलमय शुभकामना!!!',\n                  `Wish you a very Happy Dashain and Tihar!!!`,\n                ]}\n              />\n            </div>\n          )}\n        </Grid>\n        <Grid item md={3} xs={12}>\n          {loading ? (\n            <></>\n          ) : (\n            <Box\n              sx={{\n                pt: '5%',\n              }}\n            >\n              <Typography\n                sx={{\n                  fontSize: '20px',\n                  textAlign: 'center',\n                }}\n              >\n                Important Dates\n              </Typography>\n              <DashainDetails />\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n      <Footer />\n    </Box>\n  );\n};\n\nexport default DashainCountdown;\n","export default __webpack_public_path__ + \"static/media/tihar_dhun.17787dec.mp3\";","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\n\nimport { TiharDates, findReadableTime, addHours } from '../../utils';\n\nconst columns = [\n  {\n    field: 'label',\n    headerName: 'Day()',\n    flex: 1,\n    minWidth: 170,\n  },\n\n  {\n    field: 'in',\n    headerName: 'In',\n    width: 120,\n  },\n];\n\nconst TiharDays = props => {\n  const startDate = TiharDates.start_date;\n  const rows = TiharDates.dates.map((d, i) => {\n    const day = addHours(startDate, (d.day - 1) * 24);\n    return {\n      id: i + 1,\n      day: d.day,\n      nep_label: d.nep_label,\n      eng_label: d.eng_label,\n      label: `${d.nep_label}(${d.eng_label})`,\n      in: `${findReadableTime(day)}`,\n    };\n  });\n  return (\n    <Box\n      sx={{\n        height: '380px',\n        width: '100%',\n        '& .super-app-theme--odd': {\n          backgroundColor: '#ea80808c',\n          color: '#1a3e72',\n          fontWeight: '600',\n        },\n        '& .super-app-theme--even': {\n          backgroundColor: 'rgba(157, 255, 118, 0.49)',\n          color: '#1a3e72',\n          fontWeight: '600',\n        },\n      }}\n    >\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        disableColumnSelector\n        hideFooter\n        hideFooterSelectedRowCount\n        getRowClassName={params => {\n          const rd = params.id % 2 === 0 ? 'even' : 'odd';\n          return `super-app-theme--${rd}`;\n        }}\n        headerHeight={0}\n      />\n    </Box>\n  );\n};\n\nexport default TiharDays;\n","import React from 'react';\n\nimport './lights.css';\n\nconst Light = () => {\n  return (\n    <ul className=\"wire\">\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n    </ul>\n  );\n};\n\nexport default Light;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport ReactTypingEffect from 'react-typing-effect';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Tooltip from '@mui/material/Tooltip';\nimport Zoom from '@mui/material/Zoom';\n\nimport { convertNepaliDigit } from '../../utils';\nimport './style.css';\n\nimport dhun from '../../music/tihar_dhun.mp3';\n\nimport { Countdown } from '../Countdown';\n\nimport IconButton from '@mui/material/IconButton';\nimport PlayCircleOutlineRoundedIcon from '@mui/icons-material/PlayCircleOutlineRounded';\nimport PauseCircleOutlineRoundedIcon from '@mui/icons-material/PauseCircleOutlineRounded';\n\nimport Footer from '../Footer/footer';\n// import KiteFlying from '../Kite';\nimport TiharDays from './tiharDates';\n\nimport { TiharDates, addHours } from '../../utils';\nimport Candle from './Candle';\nimport Light from './Lights';\n\nconst NepaliCountdown = styled(Typography)(({ theme }) => ({\n  padding: theme.spacing(1),\n  textAlign: 'center',\n}));\n\nconst datFS = {\n  md: '55px',\n  sm: '30px',\n  xs: '25px',\n};\n\nconst TiharCountdown = () => {\n  const kaagTihar = addHours(TiharDates.start_date);\n  let timeLeft = Countdown(kaagTihar);\n  let year = new Date().getFullYear();\n\n  const [loading, setLoading] = useState(true);\n  const [msgLoading, setMsgLoading] = useState(true);\n\n  const useAudio = url => {\n    const [audio] = useState(new Audio(url));\n    audio.autoplay = true;\n    audio.volume = 0.3;\n    audio.loop = true;\n    const [playing, setPlaying] = useState(false);\n\n    function toggle() {\n      setPlaying(!playing);\n    }\n\n    useEffect(() => {\n      if (playing) {\n        var playedPromise = audio.play();\n        if (playedPromise) {\n          playedPromise\n            .catch(e => {\n              console.log(e);\n              if (\n                e.name === 'NotAllowedError' ||\n                e.name === 'NotSupportedError'\n              ) {\n                toggle();\n              }\n            })\n            .then(() => {});\n        }\n      } else {\n        audio.pause();\n      }\n    }, [playing]);\n\n    useEffect(() => {\n      audio.addEventListener('ended', () => setPlaying(false));\n      return () => {\n        audio.removeEventListener('ended', () => setPlaying(false));\n      };\n    }, []);\n\n    return [playing, toggle];\n  };\n\n  const [playing, toggle] = useAudio(dhun);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 7000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setMsgLoading(false);\n      toggle();\n    }, 8000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const timerComponents = [];\n  Object.keys(timeLeft).forEach(interval => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n    timerComponents.push(\n      <span key={interval}>{`${timeLeft[interval]} ${interval} `}</span>,\n    );\n  });\n\n  return (\n    <>\n      <Box\n        sx={{\n          pt: '1%',\n          textAlign: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Light />\n      </Box>\n      <Box\n        sx={{ flexGrow: 1, pt: '5%', pr: '2%', pl: '2%' }}\n        className=\"bg-image-tihar\"\n      >\n        <Grid container spacing={2}>\n          <Grid item md={1} xs={12}></Grid>\n          <Grid\n            item\n            md={8}\n            xs={12}\n            sx={{\n              textAlign: 'center',\n            }}\n          >\n            <Typography\n              component={'div'}\n              sx={{\n                textAlign: 'center',\n                fontSize: '55px',\n                fontWeight: 'bold',\n                fontStretch: '10px',\n                fontFamily: 'Mountains of Christmas',\n                textShadow: '0px 0px 8px rgba(255,65,185,1)',\n              }}\n            >\n              <ReactTypingEffect text={['तिहार २०७९', `Tihar ${year}`]} />\n            </Typography>\n            {loading ? (\n              ''\n            ) : (\n              <>\n                {/* <KiteFlying /> */}\n                {timerComponents.length ? (\n                  <>\n                    <Typography\n                      sx={{\n                        fontSize: '25px',\n                      }}\n                    >\n                      {timerComponents}\n                    </Typography>\n                    <Box\n                      display={'flex'}\n                      justifyContent=\"center\"\n                      sx={{\n                        mt: '2%',\n                      }}\n                    >\n                      <NepaliCountdown fontSize={datFS}>\n                        {convertNepaliDigit(timeLeft.days)} दिन\n                      </NepaliCountdown>\n                      <NepaliCountdown fontSize={datFS}>\n                        {convertNepaliDigit(timeLeft.hours)} घण्टा\n                      </NepaliCountdown>\n                      <NepaliCountdown fontSize={datFS}>\n                        {convertNepaliDigit(timeLeft.minutes)} मिनेट\n                      </NepaliCountdown>\n                      <NepaliCountdown fontSize={datFS}>\n                        {convertNepaliDigit(timeLeft.seconds)} सेकेन्ड\n                      </NepaliCountdown>\n                    </Box>\n                  </>\n                ) : (\n                  <span>Tihar is here!!</span>\n                )}\n              </>\n            )}\n            {msgLoading ? (\n              ''\n            ) : (\n              <div className=\"greeting-msg\">\n                <div className=\"play-pause\">\n                  <Tooltip\n                    TransitionComponent={Zoom}\n                    open={!playing}\n                    arrow\n                    enterDelay={3000}\n                    title={\n                      <Typography\n                        fontSize={30}\n                        sx={{ backgroundColor: 'secondary' }}\n                      >\n                        Click me to Play!\n                      </Typography>\n                    }\n                    placement=\"bottom-end\"\n                    sx={{\n                      fontSize: '20px',\n                    }}\n                  >\n                    <IconButton\n                      aria-label=\"controller\"\n                      size=\"large\"\n                      color=\"success\"\n                      sx={{\n                        height: '2em',\n                        width: '2em',\n                        fontSize: '40px',\n                      }}\n                      onClick={e => {\n                        toggle();\n                      }}\n                    >\n                      {playing ? (\n                        <PauseCircleOutlineRoundedIcon\n                          color=\"success\"\n                          sx={{ fontSize: 100, color: 'succces' }}\n                        />\n                      ) : (\n                        <PlayCircleOutlineRoundedIcon\n                          color=\"error\"\n                          sx={{ fontSize: 100, color: 'danger' }}\n                        />\n                      )}\n                    </IconButton>\n                  </Tooltip>\n                </div>\n                <ReactTypingEffect\n                  text={[\n                    'शुभ दिपावलीको हार्दिक मंङगलमय शुभकामना!!!',\n                    `Happy Deepawali!!!`,\n                  ]}\n                />\n              </div>\n            )}\n          </Grid>\n          <Grid item md={3} xs={12}>\n            {loading ? (\n              <></>\n            ) : (\n              <Box\n                sx={{\n                  pt: '5%',\n                }}\n              >\n                <Typography\n                  sx={{\n                    fontSize: '20px',\n                    textAlign: 'center',\n                  }}\n                >\n                  Important Dates\n                </Typography>\n                <TiharDays />\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n        <Footer />\n      </Box>\n    </>\n  );\n};\n\nexport default TiharCountdown;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport DashainCountdown from '../Dashain';\nimport TiharCountdown from '../Tihar';\n\nexport default function Router () {\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        exact\n        element={\n          <TiharCountdown\n          />\n        }\n      />\n       <Route\n        path=\"/dashain\"\n        exact\n        element={\n          <DashainCountdown\n          />\n        }\n      />\n      <Route\n        path=\"/tihar\"\n        exact\n        element={\n          <TiharCountdown\n          />\n        }\n      />\n    </Routes>\n  );\n}","import './App.css';\nimport Router from './Components/Router/route';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n       <Router/>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}