{"version":3,"sources":["utils/index.js","music/dashain_dhun.mp3","Components/Dashain/footer.js","Components/Kite/index.js","Components/Dashain/importantDates.js","Components/Dashain/index.js","Components/Countdown/index.js","App.js","reportWebVitals.js","index.js"],"names":["convertNepaliDigit","num","numbers","toString","split","map","n","Number","join","DashainDates","start_date","dates","eng_label","nep_label","day","addHours","date","hours","moment","add","format","BottomAppBar","AppBar","position","sx","top","bottom","background","Toolbar","Box","fontSize","flexGrow","IconButton","color","href","target","KiteFlying","className","columns","field","headerName","flex","minWidth","width","DashainDetails","props","startDate","rows","d","i","id","label","in","fromNow","height","backgroundColor","fontWeight","DataGrid","disableColumnSelector","hideFooter","hideFooterSelectedRowCount","getRowClassName","params","rd","headerHeight","NepaliCountdown","styled","Typography","padding","theme","spacing","textAlign","datFS","md","sm","xs","DashainCountdown","timeLeft","ctDate","calculateTimeLeft","difference","Date","days","Math","floor","minutes","seconds","useState","setTimeLeft","useEffect","timer","setTimeout","clearTimeout","Countdown","year","getFullYear","loading","setLoading","msgLoading","setMsgLoading","url","Audio","audio","autoplay","volume","loop","playing","setPlaying","toggle","playedPromise","play","catch","e","console","log","name","then","pause","addEventListener","removeEventListener","useAudio","dhun","timerComponents","Object","keys","forEach","interval","push","pt","pr","pl","Grid","container","item","component","text","Kite","length","display","justifyContent","mt","Tooltip","TransitionComponent","Zoom","open","arrow","enterDelay","title","placement","size","onClick","App","Dashain","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf7612a5.chunk.js","sourcesContent":["import moment from 'moment-timezone';\n\nexport const convertNepaliDigit = num => {\n  const numbers = {\n    0: '०',\n    1: '१',\n    2: '२',\n    3: '३',\n    4: '४',\n    5: '५',\n    6: '६',\n    7: '७',\n    8: '८',\n    9: '९',\n  };\n  const convertArray = num\n    .toString()\n    .split('')\n    .map(n => {\n      if (n === '.' || n === ',') {\n        return n;\n      }\n\n      return numbers[Number(n)];\n    });\n  return convertArray.join('');\n};\n\nexport const DashainDates = {\n  start_date: '2022-09-26 00:00:00',\n  dates: [\n    { eng_label: 'Ghatasthapana', nep_label: 'घटस्थापना', day: 1 },\n    { eng_label: 'Fulpati', nep_label: 'फूलपाती', day: 7 },\n    { eng_label: 'Maha astami', nep_label: 'महाअष्टमी', day: 8 },\n    { eng_label: 'Maha Nawami', nep_label: 'महानवमी', day: 9 },\n    { eng_label: 'Bijaya Dashami', nep_label: 'विजया दशमी', day: 10 },\n    { eng_label: 'Papakunsa Ekadashi', nep_label: 'पापांकुशा एकादशी', day: 11 },\n    { eng_label: 'Kojagrat Poornima', nep_label: 'कोजाग्रत पूर्णिमा', day: 14 },\n  ],\n};\nexport const findReadableTime = date => {\n  // console.log(date);\n  return moment(date).fromNow();\n};\n\nexport const addHours = (date, hours) => {\n  const added = moment(date).add(hours, 'hours').format('YYYY-MM-DD HH:mm:ss');\n  return added;\n};\n","export default __webpack_public_path__ + \"static/media/dashain_dhun.d85e3577.mp3\";","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\n\nexport default function BottomAppBar() {\n  return (\n      <AppBar position=\"fixed\" sx={{ top: 'auto', bottom: 0, background:\"#e59c96\" }}>\n      <Toolbar>\n        <Box sx={{\n          fontSize: '25px'\n        }}>\n          Wishing you and your family a very <strong> Happy Bijaya Dashami </strong>\n        </Box>\n              <Box sx={{ flexGrow: 1 }} />\n              <IconButton color=\"secondary\" aria-label=\"open drawer\" href=\"https://twitter.com/samit_gh?ref_src=twsrc%5Etfw\" target=\"_blank\">\n             <TwitterIcon/> @samit_gh\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n  );\n}\n","import React from 'react';\n\nimport './kite.css';\n\nconst KiteFlying = () => {\n  return (\n    <div className=\"kite\">\n      <div className=\"tail\"></div>\n      <div className=\"string\"></div>\n    </div>\n  );\n};\n\nexport default KiteFlying;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\n\nimport { DashainDates, findReadableTime, addHours } from '../../utils';\n\nconst columns = [\n  {\n    field: 'label',\n    headerName: 'Day()',\n    flex: 1,\n    minWidth: 170,\n  },\n\n  {\n    field: 'in',\n    headerName: 'In',\n    width: 100,\n  },\n];\n\nconst DashainDetails = props => {\n  const startDate = DashainDates.start_date;\n  const rows = DashainDates.dates.map((d, i) => {\n    const day = addHours(startDate, (d.day - 1) * 24);\n    return {\n      id: i + 1,\n      day: d.day,\n      nep_label: d.nep_label,\n      eng_label: d.eng_label,\n      label: `${d.nep_label}(${d.eng_label})`,\n      in: `${findReadableTime(day)}`,\n    };\n  });\n  return (\n    <Box\n      sx={{\n        height: '380px',\n        width: '100%',\n        '& .super-app-theme--odd': {\n          backgroundColor: '#ea80808c',\n          color: '#1a3e72',\n          fontWeight: '600',\n        },\n        '& .super-app-theme--even': {\n          backgroundColor: 'rgba(157, 255, 118, 0.49)',\n          color: '#1a3e72',\n          fontWeight: '600',\n        },\n      }}\n    >\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        disableColumnSelector\n        hideFooter\n        hideFooterSelectedRowCount\n        getRowClassName={params => {\n          const rd = params.id % 2 === 0 ? 'even' : 'odd';\n          return `super-app-theme--${rd}`;\n        }}\n        headerHeight={0}\n      />\n    </Box>\n  );\n};\n\nexport default DashainDetails;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport ReactTypingEffect from 'react-typing-effect';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Tooltip from '@mui/material/Tooltip';\nimport Zoom from '@mui/material/Zoom';\n\nimport { convertNepaliDigit } from '../../utils';\nimport './style.css';\n\nimport dhun from '../../music/dashain_dhun.mp3';\n\nimport { Countdown } from '../Countdown';\n\nimport IconButton from '@mui/material/IconButton';\nimport PlayCircleOutlineRoundedIcon from '@mui/icons-material/PlayCircleOutlineRounded';\nimport PauseCircleOutlineRoundedIcon from '@mui/icons-material/PauseCircleOutlineRounded';\n\nimport BottomAppBar from './footer';\nimport KiteFlying from '../Kite';\nimport DashainDetails from './importantDates';\n\nimport { DashainDates, addHours } from '../../utils';\n\nconst NepaliCountdown = styled(Typography)(({ theme }) => ({\n  padding: theme.spacing(1),\n  textAlign: 'center',\n}));\n\nconst datFS = {\n  md: '55px',\n  sm: '30px',\n  xs: '25px',\n};\n\nconst DashainCountdown = () => {\n  const fulpati = addHours(DashainDates.start_date, 6 * 24);\n  let timeLeft = Countdown(fulpati);\n  let year = new Date().getFullYear();\n\n  const [loading, setLoading] = useState(true);\n  const [msgLoading, setMsgLoading] = useState(true);\n\n  const useAudio = url => {\n    const [audio] = useState(new Audio(url));\n    audio.autoplay = true;\n    audio.volume = 0.3;\n    audio.loop = true;\n    const [playing, setPlaying] = useState(false);\n\n    function toggle() {\n      setPlaying(!playing);\n    }\n\n    useEffect(() => {\n      if (playing) {\n        var playedPromise = audio.play();\n        if (playedPromise) {\n          playedPromise\n            .catch(e => {\n              console.log(e);\n              if (\n                e.name === 'NotAllowedError' ||\n                e.name === 'NotSupportedError'\n              ) {\n                toggle();\n              }\n            })\n            .then(() => {});\n        }\n      } else {\n        audio.pause();\n      }\n    }, [playing]);\n\n    useEffect(() => {\n      audio.addEventListener('ended', () => setPlaying(false));\n      return () => {\n        audio.removeEventListener('ended', () => setPlaying(false));\n      };\n    }, []);\n\n    return [playing, toggle];\n  };\n\n  const [playing, toggle] = useAudio(dhun);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 7000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setMsgLoading(false);\n      toggle();\n    }, 8000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const timerComponents = [];\n  Object.keys(timeLeft).forEach(interval => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n    timerComponents.push(\n      <span key={interval}>{`${timeLeft[interval]} ${interval} `}</span>,\n    );\n  });\n\n  return (\n    <Box\n      sx={{ flexGrow: 1, pt: '5%', pr: '2%', pl: '2%' }}\n      className=\"bg-image\"\n    >\n      <Grid container spacing={2}>\n        <Grid item md={1} xs={12}></Grid>\n        <Grid\n          item\n          md={8}\n          xs={12}\n          sx={{\n            textAlign: 'center',\n          }}\n        >\n          <Typography\n            component={'div'}\n            sx={{\n              textAlign: 'center',\n              fontSize: '55px',\n              fontWeight: 'bold',\n            }}\n          >\n            <ReactTypingEffect text={['बडा दशैँ २०७९', `Dashain ${year}`]} />\n          </Typography>\n          {loading ? (\n            ''\n          ) : (\n            <>\n              <KiteFlying />\n              {timerComponents.length ? (\n                <>\n                  <Typography\n                    sx={{\n                      fontSize: '25px',\n                    }}\n                  >\n                    {timerComponents}\n                  </Typography>\n                  <Box\n                    display={'flex'}\n                    justifyContent=\"center\"\n                    sx={{\n                      mt: '2%',\n                    }}\n                  >\n                    <NepaliCountdown fontSize={datFS}>\n                      {convertNepaliDigit(timeLeft.days)} दिन\n                    </NepaliCountdown>\n                    <NepaliCountdown fontSize={datFS}>\n                      {convertNepaliDigit(timeLeft.hours)} घण्टा\n                    </NepaliCountdown>\n                    <NepaliCountdown fontSize={datFS}>\n                      {convertNepaliDigit(timeLeft.minutes)} मिनेट\n                    </NepaliCountdown>\n                    <NepaliCountdown fontSize={datFS}>\n                      {convertNepaliDigit(timeLeft.seconds)} सेकेन्ड\n                    </NepaliCountdown>\n                  </Box>\n                </>\n              ) : (\n                <span>Dashain is here!!</span>\n              )}\n            </>\n          )}\n          {msgLoading ? (\n            ''\n          ) : (\n            <div className=\"greeting-msg\">\n              <div className=\"play-pause\">\n                <Tooltip\n                  TransitionComponent={Zoom}\n                  open={!playing}\n                  arrow\n                  enterDelay={3000}\n                  title={\n                    <Typography\n                      fontSize={30}\n                      sx={{ backgroundColor: 'secondary' }}\n                    >\n                      Click me to Play!\n                    </Typography>\n                  }\n                  placement=\"bottom-end\"\n                  sx={{\n                    fontSize: '20px',\n                  }}\n                >\n                  <IconButton\n                    aria-label=\"controller\"\n                    size=\"large\"\n                    color=\"success\"\n                    sx={{\n                      height: '2em',\n                      width: '2em',\n                      fontSize: '40px',\n                    }}\n                    onClick={e => {\n                      toggle();\n                    }}\n                  >\n                    {playing ? (\n                      <PauseCircleOutlineRoundedIcon\n                        color=\"success\"\n                        sx={{ fontSize: 100, color: 'succces' }}\n                      />\n                    ) : (\n                      <PlayCircleOutlineRoundedIcon\n                        color=\"error\"\n                        sx={{ fontSize: 100, color: 'danger' }}\n                      />\n                    )}\n                  </IconButton>\n                </Tooltip>\n              </div>\n              <ReactTypingEffect\n                text={[\n                  'विजया दशमी एवम दिपावली २०७९को हार्दिक मंङगलमय शुभकामना!!!',\n                  `Wish you a very Happy Dashain and Tihar!!!`,\n                ]}\n              />\n            </div>\n          )}\n        </Grid>\n        <Grid item md={3} xs={12}>\n          {loading ? (\n            <></>\n          ) : (\n            <Box\n              sx={{\n                pt: '5%',\n              }}\n            >\n              <Typography\n                sx={{\n                  fontSize: '20px',\n                  textAlign: 'center',\n                }}\n              >\n                Important Dates\n              </Typography>\n              <DashainDetails />\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n      <BottomAppBar />\n    </Box>\n  );\n};\n\nexport default DashainCountdown;\n","import { useEffect, useState } from 'react';\n\nexport const Countdown = ctDate => {\n  const calculateTimeLeft = () => {\n    let until = new Date(ctDate);\n    const difference = +until - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n  return timeLeft;\n};\n","import './App.css';\nimport DashainCountdown from './Components/Dashain';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DashainCountdown/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}