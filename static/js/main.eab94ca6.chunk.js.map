{"version":3,"sources":["utils/index.js","music/dashain_dhun.mp3","Components/Dashain/footer.js","Components/Kite/index.js","Components/Dashain/index.js","Components/Countdown/index.js","App.js","reportWebVitals.js","index.js"],"names":["convertNepaliDigit","num","numbers","toString","split","map","n","Number","join","BottomAppBar","AppBar","position","sx","top","bottom","background","Toolbar","Box","fontSize","flexGrow","IconButton","color","href","target","KiteFlying","class","DashainCountdown","timeLeft","ctDate","calculateTimeLeft","difference","Date","days","Math","floor","hours","minutes","seconds","useState","setTimeLeft","useEffect","timer","setTimeout","clearTimeout","Countdown","year","getFullYear","loading","setLoading","msgLoading","setMsgLoading","url","Audio","audio","volume","loop","playing","setPlaying","play","pause","addEventListener","removeEventListener","useAudio","dhun","toggle","timerComponents","Object","keys","forEach","interval","push","Container","maxWidth","className","text","Kite","length","Typography","display","mt","onLoadedData","onClick","App","Dashain","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eab94ca6.chunk.js","sourcesContent":["\nexport const convertNepaliDigit = (num) => {\n    const numbers = {\n        0: '०',\n        1: '१',\n        2: '२',\n        3: '३',\n        4: '४',\n        5: '५',\n        6: '६',\n        7: '७',\n        8: '८',\n        9: '९'\n    }\n    const convertArray = num.toString().split('').map(n => {\n        if(n === '.' || n === ',') {\n            return n;\n        }\n\n        return numbers[Number(n)];\n    })\n    return convertArray.join('');\n}\n","export default __webpack_public_path__ + \"static/media/dashain_dhun.d85e3577.mp3\";","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\n\nexport default function BottomAppBar() {\n  return (\n      <AppBar position=\"fixed\" sx={{ top: 'auto', bottom: 0, background:\"#e59c96\" }}>\n      <Toolbar>\n        <Box sx={{\n          fontSize: '25px'\n        }}>\n          Wishing you and your family a very <strong> Happy Bijaya Dashami </strong>\n        </Box>\n              <Box sx={{ flexGrow: 1 }} />\n              <IconButton color=\"secondary\" aria-label=\"open drawer\" href=\"https://twitter.com/samit_gh?ref_src=twsrc%5Etfw\" target=\"_blank\">\n             <TwitterIcon/> @samit_gh\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n  );\n}\n","import React from 'react'\n\nimport './kite.css'\n\nconst KiteFlying = () => {\n    return(\n    <div class=\"kite\">\n\t<div class=\"tail\"></div>\n        </div>\n    )\n}\n\nexport default KiteFlying;\n","import React, { useEffect, useState }  from 'react';\nimport ReactTypingEffect from 'react-typing-effect';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\n\nimport { convertNepaliDigit } from '../../utils';\nimport './style.css';\nimport dhun from '../../music/dashain_dhun.mp3';\n\nimport { Countdown } from '../Countdown';\n\nimport PlayCircleOutlineRoundedIcon from '@mui/icons-material/PlayCircleOutlineRounded';\nimport PauseCircleOutlineRoundedIcon from '@mui/icons-material/PauseCircleOutlineRounded';\n\nimport BottomAppBar from './footer'\nimport KiteFlying from '../Kite';\n\nconst DashainCountdown = () => {\n    let timeLeft = Countdown(\"2022-10-02\");\n    let year = new Date().getFullYear();\n\n    const [loading, setLoading] = useState(true);\n    const [msgLoading, setMsgLoading] = useState(true);\n\n\n    const useAudio = url => {\n        const [audio] = useState(new Audio(url));\n        audio.volume = 0.2;\n        audio.loop = true;\n        const [playing, setPlaying] = useState(false);\n\n        const toggle = () => setPlaying(!playing);\n\n        useEffect(() => {\n            playing ? audio.play() : audio.pause();\n        },\n            [playing]\n        );\n\n        useEffect(() => {\n            audio.addEventListener('ended', () => setPlaying(false));\n            return () => {\n                audio.removeEventListener('ended', () => setPlaying(false));\n            };\n        }, []);\n\n        return [playing, toggle];\n    };\n    const [playing, toggle] = useAudio(dhun);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setLoading(false)\n        }, 7000);\n        return () => clearTimeout(timer);\n    }, []);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setMsgLoading(false)\n            toggle();\n        }, 8000);\n\n        return () => clearTimeout(timer);\n    }, []);\n\n    const timerComponents = [];\n    Object.keys(timeLeft).forEach((interval) => {\n        if(!timeLeft[interval]) {\n            return;\n        }\n\n        timerComponents.push(\n            <span>\n                {timeLeft[interval]} {interval}{\" \"}\n            </span>\n        );\n    });\n\n    return (\n    \n        <Container maxWidth=\"sm\" >\n        <Box className=\"bg-image\">\n        <div className=\"ct\" >\n            <p className=\"heading\"> <h1>\n                <ReactTypingEffect\n                text={[\"बडा दशैँ २०७९\", `Dashain ${year}`]}\n                />\n            </h1>\n            </p>\n            <p>\n            {loading ? '' : <div>\n                            <KiteFlying/>\n                    {\n                        timerComponents.length ?\n                        (<div>\n                            <Typography sx={{\n                                fontSize: '25px'\n                            }}>\n                                {timerComponents}\n                            </Typography>\n                            <Box display={'flex'} sx={{\n                                fontSize: '55px',\n                                mt: '2%'\n                            }}>\n                                <span> {convertNepaliDigit(timeLeft.days)} दिन </span>\n                                <span>{convertNepaliDigit(timeLeft.hours)} घण्टा </span>\n                                <span> {convertNepaliDigit(timeLeft.minutes)} मिनेट </span>\n                                <span>{convertNepaliDigit(timeLeft.seconds)} सेकेन्ड </span>\n                            </Box>\n                        </div>)\n                            : <span>Dashain is here!!</span>\n                    }\n                </div>\n                }\n            </p>\n            <p>\n                {msgLoading ? '' :\n                    <div className=\"greeting-msg\">\n                        <div className=\"play-pause\">\n                            <button onLoadedData={toggle}  onClick={toggle}>{playing ? <PauseCircleOutlineRoundedIcon sx={{ fontSize: 50, color: 'info' }} /> : <PlayCircleOutlineRoundedIcon sx={{ fontSize: 50, color: 'info'}}/>}</button>\n                        </div>\n                    <ReactTypingEffect\n\n                        text={[\"विजया दशमी एवम दिपावली २०७९को हार्दिक मंङगलमय शुभकामना!!!\", `Wish you a very Happy Dashain and Tihar!!!`]}\n                        />\n                    </div>\n                }\n            </p>\n                </div>\n                </Box>\n        <BottomAppBar/>\n        </Container>\n    )\n\n}\n\nexport default DashainCountdown;\n","import  { useEffect, useState } from 'react';\n\nexport const Countdown = (ctDate) => {\n\n    const calculateTimeLeft = () => {\n        let until = new Date(ctDate)\n        const difference = +until - +new Date();\n        let timeLeft = {};\n\n        if(difference > 0) {\n            timeLeft = {\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n        }\n\n        return timeLeft;\n    };\n\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setTimeLeft(calculateTimeLeft());\n        }, 1000);\n        return () => clearTimeout(timer);\n    });\n    return timeLeft\n}\n","import './App.css';\nimport DashainCountdown from './Components/Dashain';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DashainCountdown/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}